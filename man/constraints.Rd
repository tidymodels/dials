% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/constraints.R
\name{constraints}
\alias{constraints}
\alias{has_constraint}
\alias{add_parameter_constraint}
\alias{remove_parameter_constraint}
\alias{update_parameter_constraint}
\title{Parameter constraints}
\usage{
has_constraint(object)

add_parameter_constraint(object, .constraint = NULL)

remove_parameter_constraint(object)

update_parameter_constraint(object, .constraint = NULL)
}
\value{
\code{\link[=has_constraint]{has_constraint()}} returns a logical, all others return parameter
sets.
}
\description{
These helper functions can help manage constraints among parameters.
}
\examples{
library(dplyr)

no_constr_prm <- parameters(lambda = penalty(), mixture(), num_terms(c(1, 10)))

has_constraint(no_constr_prm)

constr_prm <- add_parameter_constraint(no_constr_prm, lambda < 0.01)
constr_prm
has_constraint(constr_prm)

remove_parameter_constraint(constr_prm)
update_parameter_constraint(constr_prm, log10(lambda) < -2 & mixture > 1 / 2)

# Using an existing expression? Splice it in
is_even_exp <- quote(num_terms \%\% 2 == 0)
even_prm <- add_parameter_constraint(no_constr_prm, !!is_even_exp)
even_prm

set.seed(1)
grid_random(even_prm, size = 100) \%>\% count(num_terms)
}
